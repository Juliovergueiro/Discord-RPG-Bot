if(inicio_comando == "A"){

let nome_personagem = msg.content.split(" ")[1]
let nomepersonagem1st = nome_personagem.charAt(0).toUpperCase() + nome_personagem.toLowerCase().slice(1)
nome_personagem = nomepersonagem1st

let id_member = msg.member.id
let Defensor = db.get("usuarios").find({Nome : nome_personagem}).value()
let Atacante = personagem_logado(id_member)
// let EfeitosAtk = techs.get("Techs").find({Cmd : Atacante.Efeitos}).value()
// let EfeitosDef = techs.get("Techs").find({Cmd : Defensor.Efeitos}).value()
let Tecnica = ""
let TecnicaAtk = ""
let Dano = Atacante.FA
let Defesa = Defensor.Res
let Acerto = Atacante.AC
let AcertoDefensor = Defensor.AC
let Esquiva = Defensor.ES
let IniciativaAtk = Atacante.IN + Atacante.VdAcao
let IniciativaDef = Defensor.IN + Defensor.VdE
let Letalidade = Atacante.LT
let Armadura = Defensor.AR
let Penetracao = Atacante.PN
let Furtividade = Atacante.Fur
let Percepcao = Defensor.Per
let Tenacidade = Defensor.Ten

let Guarda = 0

let GuardaRead = ""
let GuardaFuradaRead = ""

let Contato = "N"

let TenBuff = 10

let HpPercent = Math.floor(Defensor.HP / Defensor.Max_HP * 100)

let TesteIncapacitado = rollDice1d20()

let ReducaoIncapacitado = 0

let Incapacitar = 0

let Machucado = 100 - HpPercent

if(Machucado < 20){

ReducaoIncapacitado = 20 - Machucado

Incapacitar -= ReducaoIncapacitado

// Machucado = 20 só deve passar essa leitura do cap de 80% pra regeneração, o machucado deve ser lido até 100% normalmente

}

let ReducTol = Math.floor(Machucado * 0.25)

TenBuff -= ReducTol

if(TenBuff < 0){

Tolerancia = 0

}

let ReducRegen = "" // acho q vai tar no cmd de mudança de turnos msm

let SpPercentAtk = Math.floor(Atacante.SP / Atacante.Max_SP * 100)

let SpPercentDef = Math.floor(Defensor.SP / Defensor.Max_SP * 100)

let FadigadoAtk = 100 - SpPercentAtk

let FadigadoDef = 100 - SpPercentDef

let ReducInAtk = Math.floor(FadigadoAtk * 0.05)

let ReducInDef = Math.floor(FadigadoDef * 0.05)

IniciativaAtk -= ReducInAtk

IniciativaDef -= ReducInDef

let MpPercent = Defensor.MP / Defensor.Max_MP * 100

let Esgotado = 100 - MpPercent

let TenPlena = (TenBuff + Tenacidade)*2
let TenNata = TenBuff + Tenacidade

let BonusDano = ``
let BonusDef = ``
let BonusAcerto = ``
let BonusEsquiva = ``

let EsquivaRead = ""

let ContraAtk = rollDice1d20()
let ContraDef = rollDice1d20()
let dadoAparar = rollDice1d20()
let contraAparar = rollDice1d20()

let TD = 0
let TL = 0
let DanopreRes = 0

let FACrit = -1
let FDCrit = -1
let ACCrit = -1
let ESCrit = -1

let DadoFA = 0
let DadoFD = 0
let DadoAC = rollDice2d12()
let DadoES = rollDice2d12()

let AtaqueMP = 0
let AtaqueSP = 0
let DefesaMP = 0
let DefesaSP = 0

if(Atacante.AtkMult > 0){

AtaqueSP += 1

}

if(Defensor.Vtg.includes("Maestria em Combate Corpo a Corpo (1)")){

Esquiva += 1

}

if(Defensor.Vtg.includes("Maestria em Combate Corpo a Corpo (2)")){

Esquiva += 2

}

if(Atacante.Vtg.includes("Força Imensa (1)")){

// && Atacante.tipodeataque = "Queima Roupa" || atacante.tipodeataque = "Curta Distancia"

Dano += 2

}

if(Atacante.Vtg.includes("Força Imensa (2)")){

// && Atacante.tipodeataque = "Queima Roupa" || atacante.tipodeataque = "Curta Distancia"

Dano += 4

}

if(Atacante.Vtg.includes("Velocidade Imensa (1)")){

// && Atacante.tipodeataque = "Queima Roupa" || atacante.tipodeataque = "Curta Distancia"

IniciativaAtk += 1

}

if(Atacante.Vtg.includes("Velocidade Imensa (2)")){

// && Atacante.tipodeataque = "Queima Roupa" || atacante.tipodeataque = "Curta Distancia"

IniciativaAtk += 2

}

if(Atacante.Vtg.includes("Reflexos Imensos (1)")){

// && Atacante.tipodeataque = "Queima Roupa" || atacante.tipodeataque = "Curta Distancia"

IniciativaDef += 1

}

if(Atacante.Vtg.includes("Reflexos Imensos (2)")){

// && Atacante.tipodeataque = "Queima Roupa" || atacante.tipodeataque = "Curta Distancia"

IniciativaDef += 2

}

if(Atacante.Vtg.includes("Maestria em Armas (1)") && Atacante.Arma != "Desarmado"){

Acerto += 1

}

if(Atacante.Vtg.includes("Maestria em Armas (2)") && Atacante.Arma != "Desarmado"){

Acerto += 2

}

if(Atacante.Vtg.includes("Maestria em Armas (3)") && Atacante.Arma != "Desarmado"){

Acerto += 2
Letalidade += 1

}

if(Atacante.Ativacao == "Manipulacao de Energia Amaldiçoada"){

let Manipu = Atacante.FE - 3

if(Atacante.Vtg.includes("Maestria em Controle de Energia (1)")){

Manipu += 1

}

if(Atacante.Vtg.includes("Maestria em Controle de Energia (2)")){

Manipu += 1

}

let ManipuDef = Defensor.DE

let ManipuDano = Manipu - ManipuDef

if(Manipu > ManipuDef){

Dano += ManipuDano

}

}

if(Atacante.Arma == "Desarmado"){

IniciativaAtk += 1

TD = 6
TL = 4

}

if(Atacante.Arma == "Espada Bokken"){

TD = 11
TL = 7

}

if(Atacante.Arma == "Katana"){

Letalidade += 2

TD = 4
TL = 11

}

if(Atacante.Arma == "Presas Amaldicoadas"){

TD = 3
TL = 9
Letalidade += 1

}

if(Atacante.Arma == "Lingua"){

TD = 3
TL = 1

let LinguaAcerto = rollDice1d12()

Acerto += LinguaAcerto

BonusAcerto += `
> **+${LinguaAcerto}** de Acerto (Lingua)!
`

}

if(Defensor.Arma == "Lingua" && Defensor.Reacao == "Bloqueio"){

Defesa += 5

let LinguaDef = rollDice1d8()

Defesa += LinguaDef

BonusDef += `
> **+${LinguaDef}** de Defesa (Lingua)!
`

}

if(Defensor.Arma == "Desarmado"){

IniciativaDef += 1

}

if(Atacante.Ataque == "Soco"){

DadoFA = rollDice1d8()

FACrit = 8

AtaqueSP += 0

}

if(Atacante.Ataque == "Chute"){

DadoFA = rollDice1d10()

FACrit = 10

AtaqueSP += 1
Dano += 2
IniciativaAtk -= 1

}

if(Atacante.Ataque == "Corte"){

DadoFA = rollDice1d10()

FACrit = 10

AtaqueSP += 1

}

if(Atacante.AcaoEsp.includes("Ataque Rapido")){

let AtaqueRapido = rollDice1d6()

IniciativaAtk += AtaqueRapido

AtaqueSP += 1

}

if(Atacante.Ataque == "Estocada"){

DadoFA = rollDice1d8()

FACrit = 8

Letalidade += 1

Acerto -= 1

AtaqueSP += 1

}

if(Defensor.Reacao == "Esquiva"){

Esquiva += 1
DefesaSP += 1

}

let Rolar = 0

if(Defensor.Reacao == "Rolar"){

DefesaSP += 2

Rolar = rollDice1d6()

Esquiva += Rolar

}

if(DadoFA == FACrit){

DadoFA += Math.ceil(FACrit*0.5)

}

if(DadoFD == FDCrit){

DadoFD += Math.ceil(FDCrit*0.5)

}

if(DadoAC == ACCrit){

DadoAC += Math.ceil(ACCrit*0.5)

}
if(DadoES == ESCrit){

DadoES += Math.ceil(ESCrit*0.5)

}

let VantInAtk = IniciativaAtk
let VantInDef = IniciativaDef
let VantIn = 0
let VitoriosoIn = ""

if(VantInAtk > VantInDef){

VantIn = VantInAtk - VantInDef

Acerto += VantIn

VitoriosoIn = Atacante.Nome

}

if(VantInAtk < VantInDef){

VantIn = VantInDef - VantInAtk

Esquiva += VantIn

VitoriosoIn = Defensor.Nome

}

if(VantInAtk == VantInDef){

VitoriosoIn = "Empate"

}

let ApararRead = ""

if(Defensor.Reacao == "Aparar"){

ApararRead = `
> Aparar: ${AcertoDefensor} + **${dadoAparar}** x. **${contraAparar}** + ${Acerto}
`

DefesaSP += 1

let Aparar = AcertoDefensor + dadoAparar - contraAparar - Acerto

let ApararDef = rollDice1d6()

DadoFD = ApararDef

Esquiva -= 3

Esquiva += Aparar

}

let GuardaFurada = "N"

if(Defensor.Efeitos.includes("Mugen Ativando")){

Tecnica = techs.get("Techs").find({Nome : "Mugen"}).value()

let tInAtk = IniciativaAtk + rollDice1d20()

let tInDef = IniciativaDef + rollDice1d20() + 8

if(tInAtk > tInDef){

DadoFD = 0

Esquiva -= 10000

GuardaFurada = "S"

GuardaFuradaRead = `**${Atacante.Nome}** ultrapassou o **Mugen** antes de ser levantado.

Furo de Guarda: **${tInAtk}** x. **${tInDef}**`

const Replacemugen1 = Defensor.Efeitos.replace("Mugen Ativando - ", "Mugen Ativo - ")
Defensor.Efeitos = Replacemugen1

}

if(tInDef >= tInAtk){

Defensor.Reacao = "Mugen"

const Replacemugen2 = Defensor.Efeitos.replace("Mugen Ativando - ", "Mugen Ativo - ")
Defensor.Efeitos = Replacemugen2

}

}

if(Defensor.Efeitos.includes("Mugen Ativo")){

Tecnica = techs.get("Techs").find({Nome : "Mugen"}).value()

Esquiva += 10000

EsquivaRead = "Mugen"

Defensor.Reacao = "Mugen"

}

if(Defensor.Reacao == "Bloqueio"){

let tInAtk = IniciativaAtk + rollDice1d20() - 8

let tInDef = IniciativaDef + rollDice1d20()

if(Atacante.AcaoEsp.includes("Perfurante")){

let AtkPerfurante = rollDice1d8()

tInAtk += AtkPerfurante

}

if(tInAtk > tInDef){

DadoFD = 0

Esquiva -= 1

GuardaFurada = "S"

GuardaFuradaRead = ""

msg.channel.send(`**${Atacante.Nome}** furou a guarda de **${Defensor.Nome}**.

Furo de Guarda: **${tInAtk}** x. **${tInDef}**`)

}

if(tInDef >= tInAtk){

DadoFD = rollDice1d12()

Esquiva -= 1

}

}

let Mirahold = Atacante.Mira

if(GuardaFurada == "N" || Atacante.MiraParte == "Torso" || Atacante.MiraParte == "Cabeca" && Defensor.Reacao == "Bloqueio"){

Atacante.Mira = "o Braco"
db.write()

}

if(Atacante.Mira == "o Olho"){

Letalidade += 5
Acerto -= 6

}

if(Atacante.Mira == "o Rosto"){

Letalidade += 1
Acerto -= 2

}

if(Atacante.Mira == "o Pescoco"){

Letalidade += 2
Acerto -= 3

}

if(Atacante.Mira == "o Braco"){

Dano -= 2

Acerto += 2

}

if(Atacante.Mira == "o Peito"){

Dano += 1

}

if(Atacante.Mira == "a Mao"){

Miraread = "o"

Dano -= 2

Acerto += 2

}

if(Atacante.Mira == "o Abdomem"){

Miraread = "o"

Acerto += 1

}

if(Atacante.Mira == "a Perna"){

Miraread = "a"

Dano -= 2

Acerto += 2

}

if(Defensor.Reacao == "Contra Ataque"){

Esquiva -= 3
IniciativaDef -= 3

}

let TesteAcerto = Acerto + DadoAC - DadoES - Esquiva

let Vdadano = 0

let Vdalet = 0

let VantagemEsquiva = 0

let CARead = ``

let TesteCA = 0

if(Defensor.Reacao == "Contra Ataque"){

DefesaSP += 2

TesteCA = ContraAtk + IniciativaDef - ContraDef - IniciativaAtk

if(TesteCA > 4){

TesteCA = 4

}

if(TesteCA > 0){
TesteAcerto = -1

Defensor.VdAcao += TesteCA

}

CARead = `
**Contra Ataque! **

> Contra Ataque: ${IniciativaDef} + **${ContraAtk}** x. **${ContraDef}** + ${IniciativaAtk} - Vantagem de Teste: ${TesteCA}
`
Atacante.AtkOport = "S"

}

// let DanoAcerto = 0

if(TesteAcerto < 0 && Defensor.Reacao == "Bloqueio"){

TesteAcerto = 1

}

if(TesteAcerto > 0){

if(Atacante.AcaoEsp.includes("Rapido") && TesteAcerto < 4){

TesteAcerto = 1

}

if(Atacante.AcaoEsp.includes("Rapido") && TesteAcerto >= 4){

TesteAcerto -= 3

}

Vdadano = TesteAcerto

Vdalet = TesteAcerto

}

if(TesteAcerto > TD){

Vdadano = TD

}

if(TesteAcerto > TL){

Vdalet = TL

}

let Vdadanomultipl = Math.floor(0.5 + (Vdadano*0.5))

let Vdaletmultipl = Math.floor(0.5 + (Vdalet*0.5))

if(TesteAcerto < 0){

VantagemAcerto = TesteAcerto

VantagemEsquiva = VantagemEsquiva - TesteAcerto * 0.334

VantagemEsquiva = Math.floor(VantagemEsquiva)

// O - é pq a vantagem de acerto vai tar negativa, então preciso calcular por negativo pra ter o valor dela positivo (-9 - -9 = +9, o valor de vtgesquiva é 0 então vira 9)

if(Defensor.Reacao == "Rolar"){

VantagemEsquiva = 0

}

}

if(Defensor.Efeitos.includes("Mugen Ativo")){

VantagemEsquiva = 0

}

if(Atacante.AcaoEsp.includes("Forte")){

let AtaqueForte = rollDice1d4()

Dano += AtaqueForte

AtaqueSP += 1

}

if(Atacante.BlessedBySparks == "S"){

// mais facil de acertar black flash, mais fe, acaba qnd dá fim de turno

// abençoado pelos raios

}

let BlackFlash = rollDice1d100()

let BFRead = ""

if(BlackFlash >= 1000){

Atacante.BlessedBySparks = "S"

let Gifsorting = rollDice1d6()

BFRead = `
> **Black Flash! **
`
if(Gifsorting == 10){
msg.channel.send({
files: [
'./pics/bf1.gif'
]
})}

if(Gifsorting == 20){
msg.channel.send({
files: [
'./pics/bf2.gif'
]
})}

if(Gifsorting == 30){
msg.channel.send({
files: [
'./pics/bf3.gif'
]
})}

if(Gifsorting == 40){
msg.channel.send({
files: [
'./pics/bf4.gif'
]
})}

if(Gifsorting == 50){
msg.channel.send({
files: [
'./pics/bf5.gif'
]
})}

if(Gifsorting == 60){
msg.channel.send({
files: [
'./pics/bf6.gif'
]
})}

}

if(Defensor.Restricao.includes("Parado")){

Esquiva = 0
Acerto += 20

}

if(Atacante.Efeitos.includes("Ratio") && (Acerto + DadoAC) >= 15 && TesteAcerto > 0){

TecnicaAtk = techs.get("Techs").find({Nome : "Técnica da Proporção"}).value()

let QuantidadeDados = TecnicaAtk.DanoQuant

let NumerosDados = TecnicaAtk.DanoNumb

let DadoDano = rollDice(QuantidadeDados, QuantidadeDados*NumerosDados)

let DadoDefRatio = rollDice1d8()

let DadoRatio = DadoDano + Atacante.FE + 2

let DefRatio = Defesa + DadoDefRatio

let Ratio = DadoRatio - DefRatio

if(Ratio < 0){
Ratio = 0
}

Dano += 2

Dano += Ratio

msg.channel.send(`**${Atacante.Nomeread}** acertou com a **Técnica de Proporção** e ganhou: **${Ratio}** de Dano.`)

msg.channel.send(({
files: [
'./pics/Ratio.png'
]
}))

}

let TesteDano = Dano + DadoFA - DadoFD - Defesa

if(TesteDano <= 0 && Defensor.Reacao !== "Bloqueio"){

TesteDano = 1

}

if(TesteDano <= 0 && Defensor.Reacao == "Bloqueio"){

TesteDano = 0

}

let DanoCausado = TesteDano

let DanoLetalidade = 0

let Pen = Penetracao

Armadura -= Pen

if(Armadura < 0){

Armadura = 0

}

Armadura = 7.5

let RedAR = Armadura / 1000 * 100

TesteDano *= Vdadanomultipl

DanoLetalidade = Vdaletmultipl*Letalidade

let LetalidadeRed = DanoLetalidade

LetalidadeRed *= RedAR

DanoLetalidade -= LetalidadeRed

if(TesteDano <= TenPlena){

DanopreRes = TesteDano

let ReducaoRes = TesteDano * 0.5

console.log(ReducaoRes)

ReducaoRes = Math.floor(ReducaoRes)

TesteDano = ReducaoRes

}

if(TesteDano > TenPlena){

DanopreRes = TesteDano

TesteDano -= TenNata

}

if(Defensor.Reacao == "N"){
Defensor.Reacao = "Neutro"
}

Classe1 = Atacante.Classe
Classe2 = Defensor.Classe
Grau1 = Atacante.Grau
Grau2 = Defensor.Grau

OportRead = ""

if(Atacante.AtkOport == "S"){

OportRead = `
> **Ataque de Oportunidade! **
`
Atacante.AtkMult -= 1
Atacante.AtkOport == "N"

}

if(Atacante.CA == "S" && TesteCA == 0){

CARead = `
> **Contra Ataque! **
`
Atacante.CA = "N"

}

Atacante.SP -= AtaqueSP

Atacante.MP -= AtaqueMP

Defensor.SP -= DefesaSP

Defensor.MP -= DefesaMP

if(TesteAcerto >= 0){

Defensor.HP -= TesteDano

Defensor.HP -= DanoLetalidade

let DanoTotal = TesteDano + DanoLetalidade

msg.channel.send(`${Atacante.Nomeread} acertou **${Atacante.Mira}** de ${Defensor.Nomeread} com **${Atacante.Ataque}**. ${Defensor.Sobrenome} ${Defensor.Nomeread} reagiu com **${Defensor.Reacao}**.

**${Atacante.Sobrenome} ${Atacante.Nomeread}** causou **${DanoTotal}** de Dano. **${Defensor.Sobrenome} ${Defensor.Nomeread}** ficou com **${Defensor.HP}** de HP.

Acerto: ${Acerto} + **${DadoAC}** x. **${DadoES}** + ${Esquiva}

Ataque: ${Dano} + **${DadoFA}** x. **${DadoFD}** + ${Defesa}

> Grau d${Classe1}: **${Grau1}** - Grau d${Classe2}: **${Grau2}**
${BonusAcerto}${BonusDef}${BonusDano}${BonusEsquiva}${CARead}${ApararRead}${OportRead}${BFRead}${GuardaFuradaRead}
> Dano: **${DanopreRes}** - Dano [pos Res]: **${TesteDano}** - Dano [Letalidade]: **${DanoLetalidade}** - Dano de Letalidade [após Armadura]: **-**

> Vtg de Iniciativa: **${VantIn}** ; **${VitoriosoIn}** - Dano [pre Vda]: **${DanoCausado}**

> Vtg de Acerto [Dano]: **${Vdadano}** - Vtg de Acerto [Letalidade]: **${Vdalet}** - Vtg de Ação: **${Atacante.VdAcao}** - Vtg de Esquiva: **${Defensor.VdE}** - Vtg de Esquiva [prox. Turno]: **${VantagemEsquiva}**`)
} else {

let Frase = ""

if(Defensor.Reacao == "Esquiva"){
Frase = `**${Defensor.Nome}** esquivou com sucesso.`
}

if(Defensor.Reacao == "Esquiva" && TesteCA < 0){
Frase = `**${Defensor.Nome}** esquivou com sucesso.`
}

if(Defensor.Reacao == "Contra Ataque" && TesteCA > 0){
Frase = `**${Defensor.Nome}** contra atacou com sucesso.

Contra Ataque: ${IniciativaAtk} + **${ContraAtk}** x. **${ContraDef}** + ${IniciativaDef}`
}

if(Defensor.Reacao == "Recuo"){
Frase = `**${Defensor.Nome}** recuou com sucesso.`
}

if(Defensor.Reacao == "Rolar"){
Frase = `**${Defensor.Nome}** rolou com sucesso.

Rolar: ${Rolar}`
}

if(Defensor.Reacao == "Aparar"){
Frase = `**${Defensor.Nome}** aparou com sucesso.

Aparar: ${AcertoDefensor} + **${dadoAparar}** x. **${contraAparar}** + ${Acerto}`
}

if(Defensor.Reacao == "Mugen"){

Frase = `**${Defensor.Nome}** parou o ataque no **Ilimitado**.`

let SortPic = rollDice1d2()

if(SortPic == 1){
msg.channel.send({
files: [
'./pics/limitless4.png'
]
})}

if(SortPic == 2){
msg.channel.send({
files: [
'./pics/limitless7.png'
]
})}

}

if(Defensor.Reacao == "N"){
Frase = `**${Defensor.Nome}** defendeu com sucesso.`
}

msg.channel.send(`
${Frase}

Esquiva: ${EsquivaRead} + **${DadoES}** x. **${DadoAC}** + ${Acerto}

> Vtg de Iniciativa: **${VantIn}** ; **${VitoriosoIn}**

> Vtg de Esquiva: **${Defensor.VdE}** - Vtg de Esquiva [prox. Turno]: **${VantagemEsquiva}**`)

}

Atacante.AtkMult += 1

Atacante.Mira = Mirahold

Defensor.VdE = VantagemEsquiva

let Kenzo = db.get("usuarios").find({Nomeread : "Kenzo"}).value()
let Ryoshi = db.get("usuarios").find({Nomeread : "Ryoshi"}).value()
let Kazuki = db.get("usuarios").find({Nomeread : "Kazuki"}).value()
let Midori = db.get("usuarios").find({Nomeread : "Midori"}).value()
let Ryuji = db.get("usuarios").find({Nomeread : "Ryuji"}).value()
let Ryushiro = db.get("usuarios").find({Nomeread : "Ryushiro"}).value()

if(Defensor.HP <= 0){

Defensor.HP = 0

if(Defensor.HP <= 0 && Defensor.Classe == "o Feiticeiro"){

msg.channel.send(`> **${Defensor.Nome}** desmaiou.`)

}

if(Defensor.HP <= 0 && Defensor.Classe == "a Maldição"){

Kenzo.XP += Defensor.XP_Drop
Ryoshi.XP += Defensor.XP_Drop
Kazuki.XP += Defensor.XP_Drop
Midori.XP += Defensor.XP_Drop
Ryuji.XP += Defensor.XP_Drop
Ryushiro.XP += Defensor.XP_Drop

msg.channel.send(`> **${Defensor.Nome}** foi exorcizado.

> Todos os feiticeiros ganharam **${Defensor.XP_Drop}** de XP.`)

}

}

if(Ryuji.Nivel > 20){

Randomgif = 0

if(Ryuji.Nivel < 24 && Ryuji.XP > 19){

Randomgif = rollDice1d10()

Kenzo.Nivel = 24
Ryoshi.Nivel = 24
Kazuki.Nivel = 24
Midori.Nivel = 24
Ryuji.Nivel = 24

msg.channel.send(`> **Level Up!** Todos uparam pro nível **${Ryuji.Nivel}**!`)

}

if(Ryuji.Nivel < 25 && Ryuji.XP > 54){

Randomgif = rollDice1d10()

Kenzo.Nivel = 25
Ryoshi.Nivel = 25
Kazuki.Nivel = 25
Midori.Nivel = 25
Ryuji.Nivel = 25

msg.channel.send(`> Level Up! **${Ryuji.Nivel}**`)

}

if(Ryuji.Nivel < 26 && Ryuji.XP > 109){

Randomgif = rollDice1d10()

Kenzo.Nivel = 26
Ryoshi.Nivel = 26
Kazuki.Nivel = 26
Midori.Nivel = 26
Ryuji.Nivel = 26

msg.channel.send(`> Level Up! **${Ryuji.Nivel}**`)

}

if(Randomgif == 1){msg.channel.send({
files: [
'./pics/gif39.gif'
]
})}

if(Randomgif == 2){msg.channel.send({
files: [
'./pics/gif15.gif'
]
})}

if(Randomgif == 3){msg.channel.send({
files: [
'./pics/gif16.gif'
]
})}

if(Randomgif == 4){msg.channel.send({
files: [
'./pics/gif7.gif'
]
})}

if(Randomgif == 5){msg.channel.send({
files: [
'./pics/gif35.gif'
]
})}

if(Randomgif == 6){msg.channel.send({
files: [
'./pics/Gif40.gif'
]
})}

if(Randomgif == 7){msg.channel.send({
files: [
'./pics/Gif41.gif'
]
})}

if(Randomgif == 8){msg.channel.send({
files: [
'./pics/Gif43.gif'
]
})}

if(Randomgif == 9){msg.channel.send({
files: [
'./pics/Random9.png'
]
})}

if(Randomgif == 10){msg.channel.send({
files: [
'./pics/Randomgif46.gif'
]
})}

if(Randomgif == 12){msg.channel.send({
files: [
'./pics/Randomgif45.gif'
]
})}

if(Randomgif == 12){msg.channel.send({
files: [
'./pics/Randomgif44.gif'
]
})}

}

db.write()

}


if(Defensor.Efeitos.includes("Mugen Ativando")){

Tecnica = techs.get("Techs").find({Nome : "Mugen"}).value()

let tInAtk = IniciativaAtk + rollDice1d20()

let tInDef = IniciativaDef + rollDice1d20() + 8

if(tInAtk > tInDef){

DadoRes = 0

Esquiva -= 10000

GuardaFurada = "S"

GuardaFuradaRead = `**${Atacante.Nome}** ultrapassou o **Mugen** antes de ser levantado.

Furo de Guarda: **${tInAtk}** x. **${tInDef}**`

const Replacemugen1 = Defensor.Efeitos.replace("Mugen Ativando - ", "Mugen Ativo - ")
Defensor.Efeitos = Replacemugen1

}

if(tInDef >= tInAtk){

Defensor.Reacao = "Mugen"

const Replacemugen2 = Defensor.Efeitos.replace("Mugen Ativando - ", "Mugen Ativo - ")
Defensor.Efeitos = Replacemugen2

}

}

if(Defensor.Efeitos.includes("Mugen Ativo")){

Tecnica = techs.get("Techs").find({Nome : "Mugen"}).value()

Esquiva += 10000

EsquivaRead = "Mugen"

Defensor.Reacao = "Mugen"

}

if(TesteAcerto > TD){

Vdadano = TD

}

if(TesteAcerto > TL){

Vdalet = TL

}

let Vdadanomultipl = Math.floor(0.5 + (Vdadano*0.5))

let Vdaletmultipl = Math.floor(0.5 + (Vdalet*0.5))

if(TesteAcerto < 0){

VantagemAcerto = TesteAcerto

VantagemEsquiva = VantagemEsquiva - TesteAcerto * 0.334

VantagemEsquiva = Math.floor(VantagemEsquiva)

// O - é pq a vantagem de acerto vai tar negativa, então preciso calcular por negativo pra ter o valor dela positivo (-9 - -9 = +9, o valor de vtgesquiva é 0 então vira 9)

if(Defensor.Reacao == "Rolar"){

VantagemEsquiva = 0

}

}

if(Defensor.Efeitos.includes("Mugen Ativo")){

VantagemEsquiva = 0

}

if(Defensor.Efeitos.includes("Mugen Ativo")){

Tecnica = techs.get("Techs").find({Nome : "Mugen"}).value()

Esquiva += 10000

EsquivaRead = "Mugen"

Defensor.Reacao = "Mugen"

}

if(Defensor.Efeitos.includes("Mugen Ativando")){

Tecnica = techs.get("Techs").find({Nome : "Mugen"}).value()

let tInAtk = IniciativaAtk + rollDice1d20()

let tInDef = IniciativaDef + rollDice1d20() + 88

if(tInAtk > tInDef){

DadoRes = 0

Esquiva -= 10000

Defensor.Reacao = "Neutro"

GuardaFurada = "S"

GuardaFuradaRead = `**${Atacante.Nome}** ultrapassou o **Mugen** antes de ser levantado.

Furo de Guarda: **${tInAtk}** x. **${tInDef}**`

const Replacemugen1 = Defensor.Efeitos.replace("Mugen Ativando - ", "Mugen Ativo - ")
Defensor.Efeitos = Replacemugen1

}

if(tInDef >= tInAtk){

Defensor.Reacao = "Mugen"

const Replacemugen2 = Defensor.Efeitos.replace("Mugen Ativando - ", "Mugen Ativo - ")
Defensor.Efeitos = Replacemugen2

}

}